<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean> -->
	
	
	<beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <beans:property name="location">
	       <beans:value>/WEB-INF/spring-pdf-views.xml</beans:value>
	   </beans:property>
	   <beans:property name="order" value="1" />
	</beans:bean>
	 
	<beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
		<beans:property name="location">
			<beans:value>/WEB-INF/spring-excel-views.xml</beans:value>
		</beans:property>
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass">
			<beans:value>
				org.springframework.web.servlet.view.tiles2.TilesView
			</beans:value>
		</beans:property>
		<beans:property name="order" value="0" />
	</beans:bean>
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<context:component-scan base-package="com.me.main" />
	<context:component-scan base-package="com.me.pojo" />
	
	<!--This includes jdbc.properties file created which contains actual value -->
	<beans:bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/jdbc.properties" />

	<!--creating datasource -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}"
		p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<!-- creating single instance of sessionfactory to be available throughout the application -->
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<beans:property name="dataSource" ref="dataSource" />
	<beans:property name="configLocation">
		<beans:value>classpath:hibernate.cfg.xml</beans:value>
	</beans:property>
	<beans:property name="configurationClass">
		<beans:value>org.hibernate.cfg.AnnotationConfiguration</beans:value>
	</beans:property>
	<beans:property name="hibernateProperties">
		<beans:props>
			<beans:prop key="hibernate.dialect">${jdbc.dialect}</beans:prop>
			<beans:prop key="hibernate.show_sql">true</beans:prop>
		</beans:props>
	</beans:property>
	</beans:bean>
	
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<beans:bean id="addressDAO" class="com.me.DAO.AddressDAO" />
	<beans:bean id="depotDAO" class="com.me.DAO.DepotDAO" />
	<beans:bean id="depotOrderDetailsDAO" class="com.me.DAO.DepotOrderDetailsDAO" />
	<beans:bean id="depotOrderItemDAO" class="com.me.DAO.DepotOrderItemDAO" />
	<beans:bean id="manufacturerDAO" class="com.me.DAO.ManufacturerDAO" />
	<beans:bean id="orderDetailsDAO" class="com.me.DAO.OrderDetailsDAO" />
	<beans:bean id="orderItemDAO" class="com.me.DAO.OrderItemDAO" />
	<beans:bean id="personDAO" class="com.me.DAO.PersonDAO" />
	<beans:bean id="productDAO" class="com.me.DAO.ProductDAO" />
	<beans:bean id="stockItemDAO" class="com.me.DAO.StockItemDAO" />
	<beans:bean id="userAccountDAO" class="com.me.DAO.UserAccountDAO" />
	
	<interceptors>
		<beans:bean class="com.me.main.ProjectInterceptor" />
	</interceptors>
	
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- max upload size in bytes -->
        <beans:property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
         
        <!-- max size of file in memory (in bytes) -->
        <beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
 
    </beans:bean>
    
    
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="mayank.tcet@gmail.com" />
		<beans:property name="password" value="Mayank15@" />
 		<beans:property name="javaMailProperties">
	   	<beans:props>
       	      <beans:prop key="mail.smtp.auth">true</beans:prop>
       	      <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
       	   </beans:props>
		</beans:property>
	</beans:bean>
	
	
</beans:beans>
